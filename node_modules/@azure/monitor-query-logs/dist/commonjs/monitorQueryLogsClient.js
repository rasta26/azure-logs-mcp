"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogsQueryClient = void 0;
const index_js_1 = require("./api/index.js");
const operations_js_1 = require("./api/operations.js");
class LogsQueryClient {
    _client;
    /** The pipeline used by this client to make requests */
    pipeline;
    constructor(credential, options = {}) {
        const prefixFromOptions = options?.userAgentOptions?.userAgentPrefix;
        const userAgentPrefix = prefixFromOptions
            ? `${prefixFromOptions} azsdk-js-client`
            : `azsdk-js-client`;
        this._client = (0, index_js_1.createMonitorQueryLogs)(credential, {
            ...options,
            userAgentOptions: { userAgentPrefix },
        });
        this.pipeline = this._client.pipeline;
    }
    /**
     * Executes a batch of Analytics queries for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries)
     * is an example for using POST with an Analytics query.
     */
    batch(body, options = { requestOptions: {} }) {
        return (0, operations_js_1.batch)(this._client, body, options);
    }
    /**
     * Executes an Analytics query for data in the context of a resource.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)
     * is an example for using POST with an Analytics query.
     */
    executeWithResourceId(resourceId, body, options = { requestOptions: {} }) {
        return (0, operations_js_1.executeWithResourceId)(this._client, resourceId, body, options);
    }
    /**
     * Executes an Analytics query for data.
     * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)
     * is an example for using POST with an Analytics query.
     */
    execute(workspaceId, body, options = { requestOptions: {} }) {
        return (0, operations_js_1.execute)(this._client, workspaceId, body, options);
    }
}
exports.LogsQueryClient = LogsQueryClient;
//# sourceMappingURL=monitorQueryLogsClient.js.map