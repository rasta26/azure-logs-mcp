"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
Object.defineProperty(exports, "__esModule", { value: true });
exports._batchSend = _batchSend;
exports._batchDeserialize = _batchDeserialize;
exports.batch = batch;
exports._executeWithResourceIdSend = _executeWithResourceIdSend;
exports._executeWithResourceIdDeserialize = _executeWithResourceIdDeserialize;
exports.executeWithResourceId = executeWithResourceId;
exports._executeSend = _executeSend;
exports._executeDeserialize = _executeDeserialize;
exports.execute = execute;
const models_js_1 = require("../models/models.js");
const urlTemplate_js_1 = require("../static-helpers/urlTemplate.js");
const core_client_1 = require("@azure-rest/core-client");
function _batchSend(context, body, options = { requestOptions: {} }) {
    return context.path("/$batch").post({
        ...(0, core_client_1.operationOptionsToRequestParameters)(options),
        contentType: "application/json",
        headers: {
            accept: "application/json",
            ...options.requestOptions?.headers,
        },
        body: (0, models_js_1.batchRequestSerializer)(body),
    });
}
async function _batchDeserialize(result) {
    const expectedStatuses = ["200"];
    if (!expectedStatuses.includes(result.status)) {
        const error = (0, core_client_1.createRestError)(result);
        error.details = (0, models_js_1.errorResponseDeserializer)(result.body);
        throw error;
    }
    const internalResult = (0, models_js_1.batchResponseDeserializer)(result.body);
    return (0, models_js_1.convertToLogsBatchResult)(internalResult);
}
/**
 * Executes a batch of Analytics queries for data.
 * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries)
 * is an example for using POST with an Analytics query.
 */
async function batch(context, body, options = { requestOptions: {} }) {
    const result = await _batchSend(context, body, options);
    return _batchDeserialize(result);
}
function _executeWithResourceIdSend(context, resourceId, body, options = { requestOptions: {} }) {
    const path = (0, urlTemplate_js_1.expandUrlTemplate)("/{+resourceId}/query", {
        resourceId: resourceId,
    }, {
        allowReserved: options?.requestOptions?.skipUrlEncoding,
    });
    return context.path(path).post({
        ...(0, core_client_1.operationOptionsToRequestParameters)(options),
        contentType: "application/json",
        headers: {
            ...(options?.prefer !== undefined ? { Prefer: options?.prefer } : {}),
            accept: "application/json",
            ...options.requestOptions?.headers,
        },
        body: (0, models_js_1.queryBodySerializer)(body),
    });
}
async function _executeWithResourceIdDeserialize(result) {
    const expectedStatuses = ["200"];
    if (!expectedStatuses.includes(result.status)) {
        const error = (0, core_client_1.createRestError)(result);
        error.details = (0, models_js_1.errorResponseDeserializer)(result.body);
        throw error;
    }
    return (0, models_js_1.convertToLogsQueryResult)((0, models_js_1.queryResultsDeserializer)(result.body));
}
/**
 * Executes an Analytics query for data in the context of a resource.
 * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)
 * is an example for using POST with an Analytics query.
 */
async function executeWithResourceId(context, resourceId, body, options = { requestOptions: {} }) {
    const result = await _executeWithResourceIdSend(context, resourceId, body, options);
    return _executeWithResourceIdDeserialize(result);
}
function _executeSend(context, workspaceId, body, options = { requestOptions: {} }) {
    const path = (0, urlTemplate_js_1.expandUrlTemplate)("/workspaces/{workspaceId}/query", {
        workspaceId: workspaceId,
    }, {
        allowReserved: options?.requestOptions?.skipUrlEncoding,
    });
    return context.path(path).post({
        ...(0, core_client_1.operationOptionsToRequestParameters)(options),
        contentType: "application/json",
        headers: {
            ...(options?.prefer !== undefined ? { Prefer: options?.prefer } : {}),
            accept: "application/json",
            ...options.requestOptions?.headers,
        },
        body: (0, models_js_1.queryBodySerializer)(body),
    });
}
async function _executeDeserialize(result) {
    const expectedStatuses = ["200"];
    if (!expectedStatuses.includes(result.status)) {
        const error = (0, core_client_1.createRestError)(result);
        error.details = (0, models_js_1.errorResponseDeserializer)(result.body);
        throw error;
    }
    return (0, models_js_1.convertToLogsQueryResult)((0, models_js_1.queryResultsDeserializer)(result.body));
}
/**
 * Executes an Analytics query for data.
 * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)
 * is an example for using POST with an Analytics query.
 */
async function execute(context, workspaceId, body, options = { requestOptions: {} }) {
    const result = await _executeSend(context, workspaceId, body, options);
    return _executeDeserialize(result);
}
//# sourceMappingURL=operations.js.map