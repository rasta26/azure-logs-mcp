{"version":3,"file":"monitorQueryLogsClient.js","sourceRoot":"","sources":["../../src/monitorQueryLogsClient.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAWlC,OAAO,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,KAAK,EAAE,qBAAqB,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAM5E,MAAM,OAAO,eAAe;IAClB,OAAO,CAA0B;IACzC,wDAAwD;IACxC,QAAQ,CAAW;IAEnC,YAAY,UAA2B,EAAE,UAAkC,EAAE;QAC3E,MAAM,iBAAiB,GAAG,OAAO,EAAE,gBAAgB,EAAE,eAAe,CAAC;QACrE,MAAM,eAAe,GAAG,iBAAiB;YACvC,CAAC,CAAC,GAAG,iBAAiB,kBAAkB;YACxC,CAAC,CAAC,iBAAiB,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,sBAAsB,CAAC,UAAU,EAAE;YAChD,GAAG,OAAO;YACV,gBAAgB,EAAE,EAAE,eAAe,EAAE;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACH,KAAK,CACH,IAAkB,EAClB,UAAiC,EAAE,cAAc,EAAE,EAAE,EAAE;QAEvD,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACH,qBAAqB,CACnB,UAAkB,EAClB,IAAe,EACf,UAA+C,EAAE,cAAc,EAAE,EAAE,EAAE;QAErE,OAAO,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACxE,CAAC;IAED;;;;OAIG;IACH,OAAO,CACL,WAAmB,EACnB,IAAe,EACf,UAAiC,EAAE,cAAc,EAAE,EAAE,EAAE;QAEvD,OAAO,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC3D,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { TokenCredential } from \"@azure/core-auth\";\nimport type { Pipeline } from \"@azure/core-rest-pipeline\";\nimport type {\n  ExecuteOptionalParams,\n  ExecuteWithResourceIdOptionalParams,\n  LogsQueryBatchOptions,\n  LogsQueryClientOptions,\n  MonitorQueryLogsContext,\n} from \"./api/index.js\";\nimport { createMonitorQueryLogs } from \"./api/index.js\";\nimport { batch, executeWithResourceId, execute } from \"./api/operations.js\";\nimport type { LogsQueryBatchResult, LogsQueryResult } from \"./models/public.js\";\nimport type { BatchRequest, QueryBody } from \"./models/models.js\";\n\nexport { LogsQueryClientOptions } from \"./api/monitorQueryLogsContext.js\";\n\nexport class LogsQueryClient {\n  private _client: MonitorQueryLogsContext;\n  /** The pipeline used by this client to make requests */\n  public readonly pipeline: Pipeline;\n\n  constructor(credential: TokenCredential, options: LogsQueryClientOptions = {}) {\n    const prefixFromOptions = options?.userAgentOptions?.userAgentPrefix;\n    const userAgentPrefix = prefixFromOptions\n      ? `${prefixFromOptions} azsdk-js-client`\n      : `azsdk-js-client`;\n    this._client = createMonitorQueryLogs(credential, {\n      ...options,\n      userAgentOptions: { userAgentPrefix },\n    });\n    this.pipeline = this._client.pipeline;\n  }\n\n  /**\n   * Executes a batch of Analytics queries for data.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/batch-queries)\n   * is an example for using POST with an Analytics query.\n   */\n  batch(\n    body: BatchRequest,\n    options: LogsQueryBatchOptions = { requestOptions: {} },\n  ): Promise<LogsQueryBatchResult> {\n    return batch(this._client, body, options);\n  }\n\n  /**\n   * Executes an Analytics query for data in the context of a resource.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/azure-resource-queries)\n   * is an example for using POST with an Analytics query.\n   */\n  executeWithResourceId(\n    resourceId: string,\n    body: QueryBody,\n    options: ExecuteWithResourceIdOptionalParams = { requestOptions: {} },\n  ): Promise<LogsQueryResult> {\n    return executeWithResourceId(this._client, resourceId, body, options);\n  }\n\n  /**\n   * Executes an Analytics query for data.\n   * [Here](https://learn.microsoft.com/azure/azure-monitor/logs/api/request-format)\n   * is an example for using POST with an Analytics query.\n   */\n  execute(\n    workspaceId: string,\n    body: QueryBody,\n    options: ExecuteOptionalParams = { requestOptions: {} },\n  ): Promise<LogsQueryResult> {\n    return execute(this._client, workspaceId, body, options);\n  }\n}\n"]}